{"ast":null,"code":"function getRandomNumber(limit) {\n  return Math.floor(Math.random() * limit).toString();\n}\n\nfunction filterSymbols(excludeSymbols, group) {\n  let newGroup = group;\n  excludeSymbols.forEach(symbol => {\n    newGroup = newGroup.replace(symbol, '');\n  });\n  return newGroup;\n}\n\nfunction createId(availableChars, idLength) {\n  let id = '';\n\n  for (let i = 0; i < idLength; i += 1) {\n    id += availableChars[getRandomNumber(availableChars.length)];\n  }\n\n  return id;\n}\n\nfunction generateUniqueId({\n  length = 20,\n  useLetters = true,\n  useNumbers = true,\n  includeSymbols = [],\n  excludeSymbols = []\n} = {}) {\n  let letters = 'abcdefghijklmnopqrstuvwxyz';\n  let numbers = '0123456789';\n  let availableChars = [];\n  let lettersArr = [];\n  let numbersArr = [];\n\n  if (useLetters) {\n    if (excludeSymbols.length) letters = filterSymbols(excludeSymbols, letters);\n    lettersArr = letters.split('');\n  }\n\n  if (useNumbers) {\n    if (excludeSymbols.length) numbers = filterSymbols(excludeSymbols, numbers);\n    numbersArr = numbers.split('');\n  }\n\n  availableChars = [...lettersArr, ...numbersArr, ...includeSymbols];\n  return createId(availableChars, length);\n}\n\nmodule.exports = generateUniqueId;","map":{"version":3,"names":["getRandomNumber","limit","Math","floor","random","toString","filterSymbols","excludeSymbols","group","newGroup","forEach","symbol","replace","createId","availableChars","idLength","id","i","length","generateUniqueId","useLetters","useNumbers","includeSymbols","letters","numbers","lettersArr","numbersArr","split","module","exports"],"sources":["/home/dhruva/Dhruva/Angular-Task2/node_modules/generate-unique-id/index.js"],"sourcesContent":["function getRandomNumber(limit) {\n  return Math.floor(Math.random() * limit).toString();\n}\n\nfunction filterSymbols(excludeSymbols, group) {\n  let newGroup = group;\n  excludeSymbols.forEach((symbol) => {\n    newGroup = newGroup.replace(symbol, '');\n  });\n\n  return newGroup;\n}\n\nfunction createId(availableChars, idLength) {\n  let id = '';\n\n  for (let i = 0; i < idLength; i += 1) {\n    id += availableChars[getRandomNumber(availableChars.length)];\n  }\n\n  return id;\n}\n\nfunction generateUniqueId({\n  length = 20,\n  useLetters = true,\n  useNumbers = true,\n  includeSymbols = [],\n  excludeSymbols = [],\n} = {}) {\n  let letters = 'abcdefghijklmnopqrstuvwxyz';\n  let numbers = '0123456789';\n  let availableChars = [];\n  let lettersArr = [];\n  let numbersArr = [];\n\n  if (useLetters) {\n    if (excludeSymbols.length) letters = filterSymbols(excludeSymbols, letters);\n    lettersArr = letters.split('');\n  }\n\n  if (useNumbers) {\n    if (excludeSymbols.length) numbers = filterSymbols(excludeSymbols, numbers);\n    numbersArr = numbers.split('');\n  }\n\n  availableChars = [...lettersArr, ...numbersArr, ...includeSymbols];\n\n  return createId(availableChars, length);\n}\n\nmodule.exports = generateUniqueId;\n"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;EAC9B,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAA3B,EAAkCI,QAAlC,EAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,cAAvB,EAAuCC,KAAvC,EAA8C;EAC5C,IAAIC,QAAQ,GAAGD,KAAf;EACAD,cAAc,CAACG,OAAf,CAAwBC,MAAD,IAAY;IACjCF,QAAQ,GAAGA,QAAQ,CAACG,OAAT,CAAiBD,MAAjB,EAAyB,EAAzB,CAAX;EACD,CAFD;EAIA,OAAOF,QAAP;AACD;;AAED,SAASI,QAAT,CAAkBC,cAAlB,EAAkCC,QAAlC,EAA4C;EAC1C,IAAIC,EAAE,GAAG,EAAT;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,IAAI,CAAnC,EAAsC;IACpCD,EAAE,IAAIF,cAAc,CAACd,eAAe,CAACc,cAAc,CAACI,MAAhB,CAAhB,CAApB;EACD;;EAED,OAAOF,EAAP;AACD;;AAED,SAASG,gBAAT,CAA0B;EACxBD,MAAM,GAAG,EADe;EAExBE,UAAU,GAAG,IAFW;EAGxBC,UAAU,GAAG,IAHW;EAIxBC,cAAc,GAAG,EAJO;EAKxBf,cAAc,GAAG;AALO,IAMtB,EANJ,EAMQ;EACN,IAAIgB,OAAO,GAAG,4BAAd;EACA,IAAIC,OAAO,GAAG,YAAd;EACA,IAAIV,cAAc,GAAG,EAArB;EACA,IAAIW,UAAU,GAAG,EAAjB;EACA,IAAIC,UAAU,GAAG,EAAjB;;EAEA,IAAIN,UAAJ,EAAgB;IACd,IAAIb,cAAc,CAACW,MAAnB,EAA2BK,OAAO,GAAGjB,aAAa,CAACC,cAAD,EAAiBgB,OAAjB,CAAvB;IAC3BE,UAAU,GAAGF,OAAO,CAACI,KAAR,CAAc,EAAd,CAAb;EACD;;EAED,IAAIN,UAAJ,EAAgB;IACd,IAAId,cAAc,CAACW,MAAnB,EAA2BM,OAAO,GAAGlB,aAAa,CAACC,cAAD,EAAiBiB,OAAjB,CAAvB;IAC3BE,UAAU,GAAGF,OAAO,CAACG,KAAR,CAAc,EAAd,CAAb;EACD;;EAEDb,cAAc,GAAG,CAAC,GAAGW,UAAJ,EAAgB,GAAGC,UAAnB,EAA+B,GAAGJ,cAAlC,CAAjB;EAEA,OAAOT,QAAQ,CAACC,cAAD,EAAiBI,MAAjB,CAAf;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBV,gBAAjB"},"metadata":{},"sourceType":"script"}